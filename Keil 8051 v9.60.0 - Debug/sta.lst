C51 COMPILER V9.60.0.0   STA                                                               11/13/2020 21:48:51 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE STA
OBJECT MODULE PLACED IN .\sta.OBJ
COMPILER INVOKED BY: d:\SiliconLabs\SimplicityStudio\v5\developer\toolchains\keil_8051\9.60\BIN\C51.exe F:\simplicity_st
                    -udo_workspace_v5\F31x_Blinky\sta.c OMF2 COMPACT DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,S
                    -PEED) INTVECTOR(0X0000) INTPROMOTE INCDIR(D:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.1.7//Device/shared/s
                    -i8051Base;D:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.1.7//Device/C8051F310/inc) PRINT(.\sta.lst) COND PAG
                    -EWIDTH(120) PAGELENGTH(65) OBJECT(.\sta.OBJ)

line level    source

   1          /*
   2           * sta.c
   3           *
   4           *  Created on: 2020年1月27日
   5           *      Author: wrangler
   6           */
   7          #include "sta.h"
   8          #include "cmd.h"
   9          
  10          idata unsigned char sta_msg[STA_MSG_LEN];
  11          unsigned char sta_msg_len = 0;
  12          
  13          float temperature = 0.0;
  14          float bite = 0.0;
  15          
  16          extern unsigned char packet_buff[ASCII_FRAME_LEN];
  17          
  18          unsigned char Float_Format(float var,unsigned char* pBuf)
  19          {
  20   1              unsigned int byte;
  21   1              unsigned char index=0;
  22   1      
  23   1              //100/symbol
  24   1              if(var < 0)
  25   1              {
  26   2                      pBuf[index] = '-';
  27   2                      index++;
  28   2              }
  29   1              else
  30   1              {
  31   2                      byte = var / 100.0;
  32   2                      if(byte != 0)
  33   2                      {
  34   3                              pBuf[index] = byte + 0x30;
  35   3                              index++;
  36   3                      }
  37   2              }
  38   1      
  39   1              //10
  40   1              var -= (byte * 100);
  41   1              byte = var / 10.0;
  42   1              if(byte != 0)
  43   1              {
  44   2                      pBuf[index] = byte + 0x30;
  45   2                      index++;
  46   2              }
  47   1      
  48   1              //1
  49   1              var -= (byte * 10);
  50   1              byte = var;
  51   1              pBuf[index] = byte + 0x30;
  52   1              index++;
C51 COMPILER V9.60.0.0   STA                                                               11/13/2020 21:48:51 PAGE 2   

  53   1      
  54   1              //.
  55   1              pBuf[index] = '.';
  56   1              index++;
  57   1      
  58   1              //.1
  59   1              var -= byte;
  60   1              var *= 10;
  61   1              byte = var;
  62   1              pBuf[index] = byte + 0x30;
  63   1              index++;
  64   1      
  65   1              return index;
  66   1      }
  67          
  68          void Teamperature_Convert(unsigned int adc_var)
  69          {
  70   1              temperature = adc_var;
  71   1              temperature /= 1024.0;
  72   1              temperature *= 3300;
  73   1              temperature -= 897;
  74   1              temperature /= 3.35;
  75   1      }
  76          
  77          void Bite_Convert(unsigned int adc_var)
  78          {
  79   1              bite = adc_var;
  80   1              bite *= 3.3;
  81   1              bite /= 4096.0;
  82   1      //      bite *= 33.7985;
  83   1      //      bite += 16.9617;
  84   1      }
  85          
  86          void UpdateFrame()
  87          {
  88   1        unsigned char i;
  89   1        for(i=0;i<ASCII_FRAME_LEN;i++)
  90   1          sta_msg[i] = packet_buff[i];
  91   1      }
  92          
  93          void UpdateSta()
  94          {
  95   1        unsigned char len;
  96   1      
  97   1        sta_msg_len = ASCII_FRAME_LEN;
  98   1      
  99   1        sta_msg[sta_msg_len++] = '#';
 100   1        sta_msg[sta_msg_len++] = 'T';
 101   1        sta_msg[sta_msg_len++] = 'P';
 102   1        sta_msg[sta_msg_len++] = ':';
 103   1      
 104   1        len = Float_Format(temperature,sta_msg+sta_msg_len);
 105   1        sta_msg_len += len;
 106   1      
 107   1        sta_msg[sta_msg_len++] = ';';
 108   1      
 109   1        sta_msg[sta_msg_len++] = '#';
 110   1        sta_msg[sta_msg_len++] = 'B';
 111   1        sta_msg[sta_msg_len++] = 'T';
 112   1        sta_msg[sta_msg_len++] = ':';
 113   1      
 114   1        len = Float_Format(bite,sta_msg+sta_msg_len);
 115   1        sta_msg_len += len;
C51 COMPILER V9.60.0.0   STA                                                               11/13/2020 21:48:51 PAGE 3   

 116   1      
 117   1        sta_msg[sta_msg_len++] = ';';
 118   1        sta_msg[sta_msg_len++] = '*';
 119   1        sta_msg[sta_msg_len++] = 0x0d;
 120   1        sta_msg[sta_msg_len++] = 0x0a;
 121   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    978    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =      9      10
   DATA SIZE        =   ----    ----
   IDATA SIZE       =    175    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
