C51 COMPILER V9.60.0.0   SPI                                                               11/13/2020 10:10:44 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE SPI
OBJECT MODULE PLACED IN .\src\spi.OBJ
COMPILER INVOKED BY: d:\SiliconLabs\SimplicityStudio\v5\developer\toolchains\keil_8051\9.60\BIN\C51.exe F:\simplicity_st
                    -udo_workspace_v5\F31x_Blinky\src\spi.c OMF2 COMPACT DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE
                    -(8,SPEED) INTVECTOR(0X0000) INTPROMOTE INCDIR(D:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.1.7//Device/shar
                    -ed/si8051Base;D:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.1.7//Device/C8051F310/inc) PRINT(.\src\spi.lst) 
                    -COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\spi.OBJ)

line level    source

   1          /*
   2           * spi.c
   3           *
   4           *  Created on: 2020��1��22��
   5           *      Author: wrangler
   6           */
   7          #include <SI_C8051F310_Register_Enums.h>
   8          #include "spi.h"
   9          #include "../cmd.h"
  10          
  11          extern unsigned long Sys_Clk;
  12          
  13          extern idata unsigned char cmd_msg[CMD_MSG_LEN];
  14          unsigned char spi_cmd_send_count = 0;
  15          unsigned char spi_cmd_send_complete = 1;
  16          
  17          unsigned char SPI_GetClockRate()
  18          {
  19   1              //F_SCK = F_SYSCLK / 2 / (SPI0CKR + 1)
  20   1              unsigned long count = Sys_Clk / 2;
  21   1              count = count / 2500000;//SCK = 2.5Mbps
  22   1              count = count - 1;
  23   1              return count & 0xff;
  24   1      }
  25          
  26          void SPI_Init()
  27          {
  28   1              //rising edge output data,falling edge acquire data
  29   1      
  30   1              //enable master mode,SCK=0 when idle
  31   1          SPI0CFG   |= 0x40;
  32   1          //3-wire Single-Master Mode
  33   1          SPI0CN    = 0x01;
  34   1          //SCK = 2.5Mbps
  35   1          SPI0CKR = SPI_GetClockRate();
  36   1      }
  37          
  38          SI_INTERRUPT(SPI0_Interrupt, 6)
  39          {
  40   1              if(SPI0CN & 0x80 == 0x80)
  41   1              {
  42   2                      SPI0CN &= ~0x80;
  43   2      
  44   2                      if(spi_cmd_send_count == CMD_MSG_LEN)
  45   2                      {
  46   3                        spi_cmd_send_complete = 1;
  47   3                              return;
  48   3                      }
  49   2      
  50   2                      SPI0DAT = cmd_msg[spi_cmd_send_count];
  51   2                      spi_cmd_send_count++;
  52   2              }
C51 COMPILER V9.60.0.0   SPI                                                               11/13/2020 10:10:44 PAGE 2   

  53   1      
  54   1              SPI0CN &= ~0x70;
  55   1      }
  56          
  57          void SPI_Send(/*unsigned char* pBuf,unsigned char len*/)
  58          {
  59   1        spi_cmd_send_count = 0;
  60   1        spi_cmd_send_complete = 0;
  61   1              SPI0CN |= 0x80;
  62   1      
  63   1      //      unsigned char i;
  64   1      //      for(i=0;i<len;i++)
  65   1      //      {
  66   1      //              while(SPI0CN & 0x02 != 0x02){;}
  67   1      //              SPI0DAT = pBuf[i];
  68   1      //      }
  69   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    181    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =      2       4
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
