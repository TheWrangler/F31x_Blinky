C51 COMPILER V9.60.0.0   ADC                                                               12/04/2020 18:19:48 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE ADC
OBJECT MODULE PLACED IN .\src\adc.OBJ
COMPILER INVOKED BY: d:\SiliconLabs\SimplicityStudio\v5\developer\toolchains\keil_8051\9.60\BIN\C51.exe F:\simplicity_st
                    -udo_workspace_v5\F31x_Blinky\src\adc.c OMF2 COMPACT DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE
                    -(8,SPEED) INTVECTOR(0X0000) INTPROMOTE INCDIR(D:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.1.7//Device/shar
                    -ed/si8051Base;D:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.1.7//Device/C8051F310/inc) PRINT(.\src\adc.lst) 
                    -COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\adc.OBJ)

line level    source

   1          /*
   2           * adc.c
   3           *
   4           *  Created on: 2020��1��22��
   5           *      Author: wrangler
   6           */
   7          #include <SI_C8051F310_Register_Enums.h>
   8          #include "adc.h"
   9          
  10          char adc_covert_completed = 1;
  11          
  12          void ADC_Init()
  13          {
  14   1              //positive input p3.2
  15   1          AMX0P     = 0x12;
  16   1          //negitive input gnd
  17   1          AMX0N     = 0x1F;
  18   1          //SAR clock 2.5MHz
  19   1          ADC0CF    = 0x48;
  20   1          //VDD as reference,enable internal temperature sensor
  21   1          REF0CN = 0x0f;
  22   1          //start convert when write 1 to AD0BUSY,enable ADC0
  23   1          ADC0CN    = 0x80;
  24   1      }
  25          
  26          
  27          char ADC_Get(unsigned int *pVar)
  28          {
  29   1              unsigned int adc_var;
  30   1      
  31   1              if((ADC0CN & 0x10) != 0x10/*ADC_ConvertFinish == 1*/)
  32   1              {
  33   2                      adc_var = ADC0H;
  34   2                      adc_var = (adc_var << 8);
  35   2                      adc_var += ADC0L;
  36   2      
  37   2                      (*pVar) = adc_var;
  38   2                      //ADC_ConvertFinish = 0;
  39   2                      //ADC0CN &= ~0x20;
  40   2                      //ADC0CN &= ~0x80;
  41   2                      adc_covert_completed = 1;
  42   2                      return 1;
  43   2              }
  44   1              else return 0;
  45   1      }
  46          
  47          void ADC_Start(/*char target*/)
  48          {
  49   1        if(adc_covert_completed != 1)
  50   1          return;
  51   1      
  52   1              //if(target == 0)
C51 COMPILER V9.60.0.0   ADC                                                               12/04/2020 18:19:48 PAGE 2   

  53   1                      AMX0P = 0x1e;
  54   1              //else AMX0P = 0x12;//P3.2
  55   1      
  56   1              //ADC0CN |= 0x80;
  57   1              ADC0CN |= 0x10;
  58   1      
  59   1              adc_covert_completed = 0;
  60   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     74    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =      1    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
